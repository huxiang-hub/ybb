<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sso.mapper.ImUserFriendMapper">
    <resultMap id="groupUserMap" type="com.sso.chatapi.entity.ImGroup">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <collection property="userList" ofType="com.sso.chatapi.entity.ImUser">
            <result column="u_id" property="id"/>
            <result column="u_name" property="name"/>
            <result column="u_avatar" property="avatar"/>
            <result column="u_sign" property="sign"/>
            <result column="dp_name" property="dpName"/>
            <result column="u_mobile" property="mobile"/>
            <result column="u_email" property="email"/>
        </collection>
    </resultMap>
    <update id="updateByPrimary">
        update im_user_friend set top_flag = #{topFlag}
        where id = #{id} and user_id = #{userId} and friend_id = #{friendId}
    </update>
    <delete id="delFriend">
        delete from im_user_friend
        where user_id =#{userId} and friend_id = #{friendId}
        or user_id =#{friendId} and friend_id = #{userId}
    </delete>
    <select id="getUserFriends" resultMap="groupUserMap" parameterType="string">
        SELECT
            g.id AS id,
            g.name AS name,
            u.id AS u_id,
            u. NAME AS u_name,
            u.sign AS u_sign,
            u.avatar AS u_avatar,
            u.mobile AS u_mobile,
            u.email AS u_email
        FROM
            (
                SELECT
                    friend_id AS user_id,
                    user_group_id AS group_id
                FROM
                    im_user_friend
                WHERE
                    user_id = #{userId}
                UNION ALL
                SELECT
                    user_id AS user_id,
                    friend_group_id AS group_id
                FROM
                    im_user_friend
                WHERE
                    friend_id = #{userId}
            ) ug
                JOIN im_user u ON u.id = ug.user_id
                JOIN im_group g ON g.id = ug.group_id
    </select>
    <select id="getFriendsList" resultType="com.sso.chatapi.entity.ImUser">
        SELECT
            a.id,
            a. NAME,
            a.avatar,
            a.phone,
            a.email,
            a.sex,
            d.dp_name,
            b.top_flag
        FROM
            im_user_friend b
        JOIN blade_user a ON a.id = b.friend_id
        LEFT JOIN yb_base_deptinfo d ON a.dept_id = d.id
        WHERE b.user_id = #{userId}
    </select>
    <select id="searchFriend" resultType="com.sso.chatapi.entity.ImUser">
        SELECT
        b.id,
        b.name,
        b.avatar,
        a.jobnum,
        a.phone as mobile,
        b.sex,
        b.curraddr,
        d.dp_name
        FROM yb_base_staffinfo a
        LEFT JOIN blade_user b
        ON a.user_id = b.id
        LEFT JOIN yb_base_deptinfo d
        ON a.dp_id = d.id
        <where>
            <if test="search!=null and search!=''">
                or b.chat_no = #{search}
                or a.phone = #{search}
            </if>
            <if test="tenantId!=null and tenantId!=''">
                and b.tenant_id = #{tenantId}
            </if>
        </where>
    </select>
    <select id="getFriend" resultType="com.sso.chatapi.entity.ImUserFriend">
        select * from  im_user_friend
        where user_id= #{userId} and friend_id = #{friendId}
    </select>
</mapper>
